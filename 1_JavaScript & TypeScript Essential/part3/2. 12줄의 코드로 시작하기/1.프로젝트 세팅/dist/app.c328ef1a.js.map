{"version":3,"sources":["app.js"],"names":["ajax","XMLHttpRequest","news_url","open","send","newsFeed","JSON","parse","response","ul","document","createElement","i","li","innerHTML","title","appendChild","getElementById"],"mappings":"AAAA,IAAMA,IAAI,GAAG,IAAIC,cAAc,EAAE,CAAC,CAAC;AACnC,IAAMC,QAAQ,GAAG,sCAAsC;AAEvDF,IAAI,CAACG,IAAI,CAAC,KAAK,EAAED,QAAQ,EAAE,KAAK,CAAC;AACjC;;AAEAF,IAAI,CAACI,IAAI,EAAE;AACX;;AAEA;AACA;;AAEA;;AAEA;;AAEA,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,IAAI,CAACQ,QAAQ,CAAC;AAC1C;AACA,IAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;AACvC;;AAGA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EAC3B,IAAMC,EAAE,GAAGH,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;EAEvCE,EAAE,CAACC,SAAS,GAAGT,QAAQ,CAACO,CAAC,CAAC,CAACG,KAAK;EAChCN,EAAE,CAACO,WAAW,CAACH,EAAE,CAAC;AAEpB;AAEAH,QAAQ,CAACO,cAAc,CAAC,MAAM,CAAC,CAACD,WAAW,CAACP,EAAE,CAAC;AAC/C","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const ajax = new XMLHttpRequest(); //AJAX 이렇게하면  변수에다가 저장한 값을 저장한다.\r\nconst news_url = 'https://api.hnpwa.com/v0/news/1.json'\r\n\r\najax.open('GET', news_url, false)\r\n// 사용법중 하나. 동기적으로 어디서 가지고 올 것인지 정하겠다.\r\n\r\najax.send();\r\n// 데이터를 가지고 온다\r\n\r\n// console.log(ajax.response);\r\n// 그 가지고온 데이터가 어디에 있는가? ajax.response에 있다.\r\n\r\n// 개발자 도구에서 preview를 보면 데이터가 이쁘게 나온다.(객체로 나온다.)\r\n\r\n// 그래서 객체인 json형식으로 바꿔야 한다.\r\n\r\nconst newsFeed = JSON.parse(ajax.response)\r\n// 괄호안의 데이터를 JSON 객체 데이터로 바꿔준다.\r\nconst ul = document.createElement('ul');\r\n// document가 바로 html을 조작하는 도구.\r\n\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  const li = document.createElement('li');\r\n\r\n  li.innerHTML = newsFeed[i].title\r\n  ul.appendChild(li);\r\n\r\n}\r\n\r\ndocument.getElementById('root').appendChild(ul)\r\n// appendchild는 자식 div태그 하위의 자식요소를 괄호 안에 있는걸 추가한다.\r\n\r\n"]}